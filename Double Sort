Double Sort
time limit per test2 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
You are given two arrays a and b, both consisting of n integers.

In one move, you can choose two indices i and j (1≤i,j≤n; i≠j) and swap ai with aj and bi with bj. You have to perform the swap in both arrays.

You are allowed to perform at most 104 moves (possibly, zero). Can you make both arrays sorted in a non-decreasing order at the end? If you can, print any sequence of moves that makes both arrays sorted.

Input
The first line contains a single integer t (1≤t≤100) — the number of testcases.

The first line of each testcase contains a single integer n (2≤n≤100) — the number of elements in both arrays.

The second line contains n integers a1,a2,…,an (1≤ai≤n) — the first array.

The third line contains n integers b1,b2,…,bn (1≤bi≤n) — the second array.

Output
For each testcase, print the answer. If it's impossible to make both arrays sorted in a non-decreasing order in at most 104 moves, print -1. Otherwise, first, print the number of moves k (0≤k≤104). Then print i and j for each move (1≤i,j≤n; i≠j).

If there are multiple answers, then print any of them. You don't have to minimize the number of moves.


#include <bits/stdc++.h>
#define int long long int
#define debug cout<<"K"
#define mod 1000000007

using namespace std;

int32_t main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 int t=1;
 cin>>t;
 while(t>0)
 {
        int n;
        cin>>n;
        unordered_map<int,int>mp;
        int a[n];
        for(int i=0;i<n;i++)
        {cin>>a[i];
        mp[a[i]]++;}
        int b[n];
        for(int i=0;i<n;i++)
        {cin>>b[i];
        mp[a[i]]++;}
        vector<pair<int,int>>v;
        for(int i=0;i<n;i++)
        {
            v.push_back({a[i],b[i]});
        }
        sort(v.begin(),v.end());
        vector<pair<int,int>>all;
        for(int i=0;i<n;i++)
        {
            int temp=mp[a[i]];
            int tempu=mp[b[i]];
            if(a[i]==v[i].first&&b[i]==v[i].second)
            {

            }
            else
            {
                for(int j=i+1;j<n;j++)
                {
                    if(a[j]==v[i].first&&b[j]==v[i].second)
                    {
                        swap(a[i],a[j]);
                        swap(b[i],b[j]);
                        all.push_back({i+1,j+1});
                    }
                }
            }
        }
        bool ans=true;
        for(int i=1;i<n;i++)
        {
            if(v[i].first>=v[i-1].first&&v[i].second>=v[i-1].second)
            {

            }
            else
            ans=false;
        }
        if(ans)
        {
            cout<<all.size()<<"\n";
            for(auto it:all)
            cout<<it.first<<" "<<it.second<<"\n";
        }
        else
        cout<<"-1\n";
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        t--;
 }
 return 0;
}
